{"version":3,"sources":["index.js"],"names":["defaultInput","store","createStore","state","action","type","input","mapStateToProps","mapDispatchToProps","dispatch","sendInput","Editor","props","event","this","target","value","id","className","onChange","handleChange","bind","React","Component","Previewer","children","ContainerEditor","connect","ContainerPreviewer","ReactDOM","render","document","getElementById"],"mappings":"0PAQMA,EAAY,+9BAqDZC,EAAQC,aALO,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCACnD,MAAoB,WAAhBA,EAAOC,KAA0BD,EAAOE,MAChCH,KAKVI,EAAkB,SAACJ,GACrB,MAAO,CAACG,MAAOH,IAGbK,EAAqB,SAACC,GACxB,MACI,CACIC,UAAW,SAACJ,GACRG,EArBL,CACHJ,KAAM,SACNC,MAmB0BA,OAQ5BK,E,kDACF,WAAYC,GAAQ,uCACVA,G,gDAEV,SAAaC,GACTC,KAAKF,MAAMF,UAAUG,EAAME,OAAOC,S,oBAEtC,WACI,OACI,sBAAKC,GAAG,iBAAR,UACI,sBAAKC,UAAU,aAAf,UACI,yCACA,mBAAGA,UAAU,gCAEjB,0BAAUD,GAAG,SAASD,MAAOF,KAAKF,MAAMN,MAAOa,SAAUL,KAAKM,aAAaC,KAAKP,e,GAd3EQ,IAAMC,WAoBrBC,E,kDACF,WAAYZ,GAAQ,uCACVA,G,0CAEV,WACI,OACI,sBAAKK,GAAG,YAAR,UACI,sBAAKC,UAAU,aAAf,UACI,4CACA,mBAAGA,UAAU,gCAEjB,qBAAKD,GAAG,UAAR,SACI,cAAC,IAAD,CAAeQ,SAAUX,KAAKF,MAAMN,iB,GAZhCgB,IAAMC,WAqBxBG,EAAkBC,YAAQpB,EAAiBC,EAAzBmB,CAA6ChB,GAC/DiB,EAAqBD,YAAQpB,EAAiBC,EAAzBmB,CAA6CH,GAExEK,IAASC,OACL,eAAC,IAAD,CAAU7B,MAAOA,EAAjB,UACI,cAACyB,EAAD,IACA,cAACE,EAAD,OAEJG,SAASC,eAAe,W","file":"static/js/main.239e64aa.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux'\r\nimport {Provider, connect} from \"react-redux\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport './index.css';\r\n\r\n//Redux:\r\nconst defaultInput = `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n\r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n\r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.org), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbered lists too.\r\n1. Use just 1s if you want!\r\n1. And last but not least, let's not forget embedded images:\r\n\r\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\r\n`;\r\n\r\nconst addInput = (string) => {\r\n    return {\r\n        type: 'CHANGE',\r\n        input: string\r\n    };\r\n};\r\n\r\nconst inputReducer = (state = defaultInput, action) => {\r\n    if (action.type === 'CHANGE') return action.input;\r\n    else return state;\r\n};\r\n\r\nconst store = createStore(inputReducer);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {input: state};\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return (\r\n        {\r\n            sendInput: (input) => {\r\n                dispatch(addInput(input));\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\n\r\n//React:\r\nclass Editor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    handleChange(event) {\r\n        this.props.sendInput(event.target.value);\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"editor-section\">\r\n                <div className=\"status-bar\">\r\n                    <div>Editor</div>\r\n                    <i className=\"fas fa-expand-arrows-alt\"/>\r\n                </div>\r\n                <textarea id=\"editor\" value={this.props.input} onChange={this.handleChange.bind(this)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Previewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"previewer\">\r\n                <div className=\"status-bar\">\r\n                    <div>Previewer</div>\r\n                    <i className=\"fas fa-expand-arrows-alt\"/>\r\n                </div>\r\n                <div id=\"preview\">\r\n                    <ReactMarkdown children={this.props.input}/>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//redux to react:\r\nconst ContainerEditor = connect(mapStateToProps, mapDispatchToProps)(Editor);\r\nconst ContainerPreviewer = connect(mapStateToProps, mapDispatchToProps)(Previewer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ContainerEditor/>\r\n        <ContainerPreviewer/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n\r\n"],"sourceRoot":""}