{"version":3,"sources":["index.js"],"names":["marked","setOptions","breaks","highlight","code","Prism","languages","javascript","defaultInput","store","createStore","state","input","extended","action","type","mapStateToProps","mapDispatchToProps","dispatch","sendInput","Editor","this","props","height","width","display","event","target","value","id","style","extend","className","onClick","toggleExtend","bind","onChange","handleChange","React","Component","Previewer","dangerouslySetInnerHTML","__html","ContainerEditor","connect","ContainerPreviewer","ReactDOM","render","document","getElementById"],"mappings":"6PASAA,IAAOC,WAAW,CACdC,QAAQ,EACRC,UAAW,SAAUC,GACnB,OAAOC,IAAMF,UAAUC,EAAMC,IAAMC,UAAUC,WAAY,iBAK/D,IAAMC,EAAY,ypCA0DZC,EAAQC,aANO,WAA8D,IAA7DC,EAA4D,uDAApD,CAACC,MAAOJ,EAAcK,SAAU,QAASC,EAAW,uCAC9E,MAAoB,WAAhBA,EAAOC,KAA0B,2BAAIJ,GAAX,IAAkBC,MAAOE,EAAOF,QACrC,WAAhBE,EAAOC,KAA0B,2BAAIJ,GAAX,IAAkBE,SAAUC,EAAOD,WAC1DF,KAKVK,EAAkB,SAACL,GAAD,OAAWA,GAE7BM,EAAqB,SAACC,GACxB,MACI,CACIC,UAAW,SAACP,GACRM,EApBL,CACHH,KAAM,SACNH,MAkB0BA,OAQ5BQ,E,kKACF,WACgC,SAAxBC,KAAKC,MAAMT,SACXJ,EAAMS,SAAS,CACXH,KAAM,SACNF,SAAU,WAIdJ,EAAMS,SAAS,CACXH,KAAM,SACNF,SAAU,W,oBAKtB,SAAOA,GACH,OAAQA,GACJ,IAAK,SACD,MAAO,CAACU,OAAQ,IAAKC,MAAO,OAChC,IAAK,YACD,MAAO,CAACC,QAAS,QACrB,QACI,MAAO,M,0BAInB,SAAaC,GACTL,KAAKC,MAAMH,UAAUO,EAAMC,OAAOC,S,oBAGtC,WACI,OACI,sBAAKC,GAAG,iBAAiBC,MAAOT,KAAKU,OAAOV,KAAKC,MAAMT,UAAvD,UACI,sBAAKmB,UAAU,aAAf,UACI,yCACA,mBAAGA,UAAS,iBAAoC,WAAxBX,KAAKC,MAAMT,SAAuB,WAAY,SAA1D,eAAiFoB,QAASZ,KAAKa,aAAaC,KAAKd,WAEjI,0BAAUQ,GAAG,SAASD,MAAOP,KAAKC,MAAMV,MAAOwB,SAAUf,KAAKgB,aAAaF,KAAKd,e,GAtC3EiB,IAAMC,WA4CrBC,E,kKACF,WACgC,SAAxBnB,KAAKC,MAAMT,SACXJ,EAAMS,SAAS,CACXH,KAAM,SACNF,SAAU,cAIdJ,EAAMS,SAAS,CACXH,KAAM,SACNF,SAAU,W,oBAKtB,SAAOA,GACH,OAAQA,GACJ,IAAK,YACD,MAAO,CAACU,OAAQ,OAAQC,MAAO,OACnC,IAAK,SACD,MAAO,CAACC,QAAS,QACrB,QACI,MAAO,M,oBAInB,WACI,OACI,sBAAKI,GAAG,YAAYC,MAAOT,KAAKU,OAAOV,KAAKC,MAAMT,UAAlD,UACI,sBAAKmB,UAAU,aAAf,UACI,4CACA,mBAAGA,UAAS,iBAAoC,cAAxBX,KAAKC,MAAMT,SAA0B,WAAY,SAA7D,eAAoFoB,QAASZ,KAAKa,aAAaC,KAAKd,WAEpI,qBAAKQ,GAAG,UAAUY,wBAAyB,CAACC,OAAQ1C,IAAOqB,KAAKC,MAAMV,iB,GAlC9D0B,IAAMC,WA2CxBI,EAAkBC,YAAQ5B,EAAiBC,EAAzB2B,CAA6CxB,GAC/DyB,EAAqBD,YAAQ5B,EAAiBC,EAAzB2B,CAA6CJ,GAExEM,IAASC,OACL,eAAC,IAAD,CAAUtC,MAAOA,EAAjB,UACI,cAACkC,EAAD,IACA,cAACE,EAAD,OAEJG,SAASC,eAAe,U","file":"static/js/main.24a2d7ec.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux'\r\nimport {Provider, connect} from \"react-redux\";\r\nimport marked from 'marked';\r\nimport Prism from 'prismjs';\r\nimport './index.css';\r\nimport './prism.css'\r\n\r\nmarked.setOptions({\r\n    breaks: true,\r\n    highlight: function (code) {\r\n      return Prism.highlight(code, Prism.languages.javascript, 'javascript');\r\n    }\r\n  });\r\n\r\n//Redux:\r\nconst defaultInput = `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n\r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n\r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.org), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | -------------\r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbered lists too.\r\n1. Use just 1s if you want!\r\n1. And last but not least, let's not forget embedded images:\r\n\r\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\r\n`;\r\n\r\nconst addInput = (string) => {\r\n    return {\r\n        type: 'CHANGE',\r\n        input: string\r\n    };\r\n};\r\n\r\nconst inputReducer = (state = {input: defaultInput, extended: 'none'}, action) => {\r\n    if (action.type === 'CHANGE') return {...state, input: action.input};\r\n    else if (action.type === 'EXTEND') return {...state, extended: action.extended};\r\n    else return state;\r\n};\r\n\r\nconst store = createStore(inputReducer);\r\n\r\nconst mapStateToProps = (state) => state\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return (\r\n        {\r\n            sendInput: (input) => {\r\n                dispatch(addInput(input));\r\n            }\r\n        }\r\n    )\r\n}\r\n\r\n\r\n//React:\r\nclass Editor extends React.Component {\r\n    toggleExtend() {\r\n        if (this.props.extended === 'none') {\r\n            store.dispatch({\r\n                type: 'EXTEND',\r\n                extended: 'editor'\r\n            })\r\n        }\r\n        else {\r\n            store.dispatch({\r\n                type: 'EXTEND',\r\n                extended: 'none'\r\n            })\r\n        }\r\n    }\r\n\r\n    extend(extended) {\r\n        switch (extended) {\r\n            case 'editor':\r\n                return {height: 520, width: '90%'};\r\n            case 'previewer':\r\n                return {display: 'none'};\r\n            default:\r\n                return {};\r\n        }\r\n    }\r\n    \r\n    handleChange(event) {\r\n        this.props.sendInput(event.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"editor-section\" style={this.extend(this.props.extended)}>\r\n                <div className=\"status-bar\">\r\n                    <div>Editor</div>\r\n                    <i className={`fas fa-${this.props.extended === 'editor'? 'compress': 'expand'}-arrows-alt`} onClick={this.toggleExtend.bind(this)}/>\r\n                </div>\r\n                <textarea id=\"editor\" value={this.props.input} onChange={this.handleChange.bind(this)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Previewer extends React.Component {\r\n    toggleExtend() {\r\n        if (this.props.extended === 'none') {\r\n            store.dispatch({\r\n                type: 'EXTEND',\r\n                extended: 'previewer'\r\n            })\r\n        }\r\n        else {\r\n            store.dispatch({\r\n                type: 'EXTEND',\r\n                extended: 'none'\r\n            })\r\n        }\r\n    }\r\n\r\n    extend(extended) {\r\n        switch (extended) {\r\n            case 'previewer':\r\n                return {height: '100%', width: '90%'};\r\n            case 'editor':\r\n                return {display: 'none'};\r\n            default:\r\n                return {};\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div id=\"previewer\" style={this.extend(this.props.extended)}>\r\n                <div className=\"status-bar\">\r\n                    <div>Previewer</div>\r\n                    <i className={`fas fa-${this.props.extended === 'previewer'? 'compress': 'expand'}-arrows-alt`} onClick={this.toggleExtend.bind(this)}/>\r\n                </div>\r\n                <div id=\"preview\" dangerouslySetInnerHTML={{__html: marked(this.props.input)}}>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//redux to react:\r\nconst ContainerEditor = connect(mapStateToProps, mapDispatchToProps)(Editor);\r\nconst ContainerPreviewer = connect(mapStateToProps, mapDispatchToProps)(Previewer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ContainerEditor/>\r\n        <ContainerPreviewer/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}